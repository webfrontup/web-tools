
webRTC 录音+录屏 仅支持Chrome
https://juejin.im/entry/5b91e8e7f265da0ac55e2cd6

改良HZRecorder.js的采样压缩
https://gist.github.com/rayyee/ffa9cdadda3cb58e752832464d865c68



已知问题
2018-09-19 caniuse 注明IOS 11.X - 12.X 上 只有Safari支持调用getUserMedia，其他App下WKWebView(UIWebView?)(相关资料)均不支持。经用户测试验证IOS 12上chrome、UC都无法录音，部分IOS 12 Safari可以获取到并且能正常录音，但部分不行，原因未知，参考ios 12 支不支持录音了。在IOS上不支持录音的环境下应该采用其他解决方案，参考案例演示、关于微信JsSDK部分。
2019-02-28 issues#14 如果getUserMedia返回的MediaStreamTrack.readyState == "ended"，"ended" which indicates that the input is not giving any more data and will never provide new data. ，导致无法录音。如果产生这种情况，目前在rec.open方法调用时会正确检测到，并执行fail回调。造成issues#14 ended原因是App源码中AndroidManifest.xml中没有声明android.permission.MODIFY_AUDIO_SETTINGS权限，导致腾讯X5不能正常录音。
2019-03-09 在Android上QQ、微信里，请求授权使用麦克风的提示，经过长时间观察发现，他们的表现很随机、很奇特。可能每次在调用getUserMedia时候都会弹选择，也可能选择一次就不会再弹提示，也可能重启App后又会弹。如果用户拒绝了，可能第二天又会弹，或者永远都不弹了，要么重置(装)App。使用腾讯X5内核的App测试也是一样奇特表现，拒绝权限后可能必须要重置(装)。这个问题貌似跟X5内核自动升级的版本有关。



隐私和安全

作为一个可能涉及重大隐私问题的 API，getUserMedia ()规范列出了浏览器必须满足的一系列隐私和安全要求。


getUserMedia ()是一个功能强大的特性，只能在安全上下文中使用; 在不安全上下文中，navigator.mediaDevices 没有定义，从而阻止了对 getUserMedia ()的访问。简而言之，安全上下文是使用 HTTPS 或文件:///URL 方案加载的页面，或者是从本地主机加载的页面。


此外，访问用户的音频和视频输入总是需要用户权限。只有窗口的顶级文档上下文才能请求使用 getUserMedia ()的权限，除非顶级上下文明确授予给定的 < iframe > 使用 Feature Policy 进行此操作的权限。否则，用户甚至不会被要求获得使用输入设备的权限。


关于这些需求和规则的更多细节，它们如何反映在代码运行的上下文中，以及浏览器如何管理用户隐私和安全问题，请继续阅读。

